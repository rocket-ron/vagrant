# -*- mode: ruby -*-
# vi: set ft=ruby :


$fix_vmware_tools_script = <<SCRIPT
sed -i.bak 's/answer AUTO_KMODS_ENABLED_ANSWER no/answer AUTO_KMODS_ENABLED_ANSWER yes/g' /etc/vmware-tools/locations
sed -i.bak 's/answer AUTO_KMODS_ENABLED no/answer AUTO_KMODS_ENABLED yes/g' /etc/vmware-tools/locations
SCRIPT

Vagrant.configure(2) do |config|

  config.vm.define :node1 do |node1|
    node1.vm.provider :vmware_fusion do |v, override|
      override.vm.box = "oracle-linux-65"
      override.vm.box_url = '/Volumes/JetDrive%20350/oracle-linux-65'
      v.vmx["memsize"] = "2048"
      v.vmx["numvcpus"] = "1"
      config.vm.provision :shell, :inline => $fix_vmware_tools_script
      config.vm.hostname = "node1.rmqnode.localdomain"
#      config.vm.network :private_network, ip: '192.168.100.10'
    end  # vmware_fusion

    node1.vm.provider :aws do |aws, override|
      override.vm.box = "dummy"
      override.vm.box_url = 'https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box'
      override.nfs.functional = false
      aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
      aws.secret_access_key = ENV['AWS_SECRET_ACCESS_KEY']
      aws.keypair_name = ENV['AWS_KEYPAIR_NAME']
      aws.ami = "ami-777f9b33"
      aws.region = "us-west-1"
      aws.instance_type = "t2.medium"
      override.ssh.username = "ec2-user"
      override.ssh.private_key_path = ENV['PRIVATE_AWS_SSH_KEY_PATH']
      aws.security_groups = ['sg-858d03e0']
      aws.block_device_mapping = [{ 'DeviceName' => '/dev/sda1', 'Ebs.VolumeSize' => 60 }]
      aws.subnet_id = 'subnet-55e8f937'
      aws.private_ip_address = '172.31.16.10'
    end #aws

    node1.vm.provider :azure do |azure, override|
      override.vm.box = "azure"
      azure.mgmt_certificate = '/Users/rcordell/Documents/MIDS/W205/MIDS-W205/project/vagrant/azure/ronmckea01.pem'
      azure.mgmt_endpoint = 'https://management.core.windows.net'
      azure.subscription_id = '651f1b6f-d652-4c9f-b1ba-3533acc3204a'
      azure.storage_acct_name = 'mckrhcea01storage01' # optional. A new one will be generated if not provided.

#      azure.vm_image = '0b11de9248dd4d87b18621318e037d37__RightImage-CentOS-6.5-x64-v14.1.5.1'
      azure.vm_image = '5112500ae3b842c8b9c604889f8753c3__OpenLogic-CentOS-65-20150605'
#      azure.vm_image = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_10-amd64-server-20150612-en-us-30GB'
      azure.vm_user = 'rcordell'
      azure.ssh_private_key_file = File.expand_path('~/.ssh/id_rsa')  # This is my private SSH key
      azure.ssh_certificate_file = File.expand_path('~/.ssh/ssh-cert.pem')  # This is the X509 certificate file generated from my private SSH key

      azure.vm_name = 'mckrhcea01-rmq1' # max 15 characters. contains letters, number and hyphens. can start with letters and can end with letters and numbers
      azure.cloud_service_name = 'mckrhcea01-rmq1' # same as vm_name. leave blank to auto-generate
      azure.deployment_name = 'mckrhcea01-rmq1' # defaults to cloud_service_name
      azure.vm_location = 'West US' # e.g., West US

      # Provide the following values if creating a *Nix VM
      azure.ssh_port = '22'
      config.ssh.pty = true  # corrects for the sudo requiring a tty on Centos distros
#      config.vm.provision :shell, :path => "../puppet/bootstrap/centos_6_x.sh"
    end  #azure
  end  #node1

  config.vm.define :node2 do |node2|

    node2.vm.provider "vmware_fusion" do |v, override|
      override.vm.box = "puppetlabs/centos-6.6-64-puppet"
      override.vm.box_url = 'puppetlabs/centos-6.6-64-nocm'
      v.vmx["memsize"] = "2048"
      v.vmx["numvcpus"] = "1"
#      config.vm.provision :shell, inline: $fix_vmware_tools_script
      config.vm.network :private_network, ip: '192.168.100.11'
    end  # vmware_fusion#
    node2.vm.provider :aws do |aws, override|
      override.vm.box = "dummy"
      override.vm.box_url = 'https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box'
      override.nfs.functional = false
      aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
      aws.secret_access_key = ENV['AWS_SECRET_ACCESS_KEY']
      aws.keypair_name = ENV['AWS_KEYPAIR_NAME']
      aws.ami = "ami-777f9b33"
      aws.region = "us-west-1"
      aws.instance_type = "t2.medium"
      override.ssh.username = "ec2-user"
      override.ssh.private_key_path = ENV['PRIVATE_AWS_SSH_KEY_PATH']
      aws.security_groups = ['sg-858d03e0']
      aws.block_device_mapping = [{ 'DeviceName' => '/dev/sda1', 'Ebs.VolumeSize' => 60 }]
      aws.subnet_id = 'subnet-55e8f937'
      aws.private_ip_address = '172.31.16.11'

    end #aws

    node2.vm.provider :azure do |azure, override|
      override.vm.box = "azure"
      azure.mgmt_certificate = '/Users/rcordell/Documents/MIDS/W205/MIDS-W205/project/vagrant/azure/ronmckea01.pem'
      azure.mgmt_endpoint = 'https://management.core.windows.net'
      azure.subscription_id = '651f1b6f-d652-4c9f-b1ba-3533acc3204a'
      azure.storage_acct_name = 'mckrhcea01storage01' # optional. A new one will be generated if not provided.

#      azure.vm_image = '0b11de9248dd4d87b18621318e037d37__RightImage-CentOS-6.5-x64-v14.1.5.1'
      azure.vm_image = '5112500ae3b842c8b9c604889f8753c3__OpenLogic-CentOS-65-20150605'
#      azure.vm_image = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_10-amd64-server-20150612-en-us-30GB'
      azure.vm_user = 'rcordell'
      azure.ssh_private_key_file = File.expand_path('~/.ssh/id_rsa')  # This is my private SSH key
      azure.ssh_certificate_file = File.expand_path('~/.ssh/ssh-cert.pem')  # This is the X509 certificate file generated from my private SSH key

      azure.vm_name = 'mckrhcea01-rmq2' # max 15 characters. contains letters, number and hyphens. can start with letters and can end with letters and numbers
      azure.cloud_service_name = 'mckrhcea01-rmq2' # same as vm_name. leave blank to auto-generate
      azure.deployment_name = 'mckrhcea01-rmq2' # defaults to cloud_service_name
      azure.vm_location = 'West US' # e.g., West US

      # Provide the following values if creating a *Nix VM
      azure.ssh_port = '22'
      config.ssh.pty = true  # corrects for the sudo requiring a tty on Centos distros
 #     config.vm.provision :shell, :path => "../puppet/bootstrap/centos_6_x.sh"
    end  #azure
  end  #node2

 config.vm.define :node3 do |node3|
    node3.vm.provider :vmware_fusion do |v, override|
      override.vm.box = "puppetlabs/centos-6.6-64-puppet"
      override.vm.box_url = 'puppetlabs/centos-6.6-64-nocm'
      v.vmx["memsize"] = "2048"
      v.vmx["numvcpus"] = "1"
#      config.vm.provision :shell, inline: $fix_vmware_tools_script
      config.vm.network :private_network, ip: '192.168.100.10'
    end  # vmware_fusion

    node3.vm.provider :aws do |aws, override|
      override.vm.box = "dummy"
      override.vm.box_url = 'https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box'
      override.nfs.functional = false
      aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
      aws.secret_access_key = ENV['AWS_SECRET_ACCESS_KEY']
      aws.keypair_name = ENV['AWS_KEYPAIR_NAME']
      aws.ami = "ami-777f9b33"
      aws.region = "us-west-1"
      aws.instance_type = "t2.medium"
      override.ssh.username = "ec2-user"
      override.ssh.private_key_path = ENV['PRIVATE_AWS_SSH_KEY_PATH']
      aws.security_groups = ['sg-858d03e0']
      aws.block_device_mapping = [{ 'DeviceName' => '/dev/sda1', 'Ebs.VolumeSize' => 60 }]
      aws.subnet_id = 'subnet-55e8f937'
      aws.private_ip_address = '172.31.16.20'
    end #aws

    node3.vm.provider :azure do |azure, override|
      override.vm.box = "azure"
      azure.mgmt_certificate = '/Users/rcordell/Documents/MIDS/W205/MIDS-W205/project/vagrant/azure/ronmckea01.pem'
      azure.mgmt_endpoint = 'https://management.core.windows.net'
      azure.subscription_id = '651f1b6f-d652-4c9f-b1ba-3533acc3204a'
      azure.storage_acct_name = 'mckrhcea01storage01' # optional. A new one will be generated if not provided.

#      azure.vm_image = '0b11de9248dd4d87b18621318e037d37__RightImage-CentOS-6.5-x64-v14.1.5.1'
      azure.vm_image = '5112500ae3b842c8b9c604889f8753c3__OpenLogic-CentOS-65-20150605'
#      azure.vm_image = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_10-amd64-server-20150612-en-us-30GB'
      azure.vm_user = 'rcordell'
      azure.ssh_private_key_file = File.expand_path('~/.ssh/id_rsa')  # This is my private SSH key
      azure.ssh_certificate_file = File.expand_path('~/.ssh/ssh-cert.pem')  # This is the X509 certificate file generated from my private SSH key

      azure.vm_name = 'mckrhcea01-rmq3' # max 15 characters. contains letters, number and hyphens. can start with letters and can end with letters and numbers
      azure.cloud_service_name = 'mckrhcea01-rmq3' # same as vm_name. leave blank to auto-generate
      azure.deployment_name = 'mckrhcea01-rmq3' # defaults to cloud_service_name
      azure.vm_location = 'West US' # e.g., West US

      # Provide the following values if creating a *Nix VM
      azure.ssh_port = '22'
      config.ssh.pty = true  # corrects for the sudo requiring a tty on Centos distros
 #     config.vm.provision :shell, :path => "../puppet/bootstrap/centos_6_x.sh"
    end  #azure
  end  #node3

  config.vm.define :node4 do |node4|

    node4.vm.provider "vmware_fusion" do |v, override|
      override.vm.box = "puppetlabs/centos-6.6-64-puppet"
      override.vm.box_url = 'puppetlabs/centos-6.6-64-nocm'
      v.vmx["memsize"] = "2048"
      v.vmx["numvcpus"] = "1"
#      config.vm.provision :shell, inline: $fix_vmware_tools_script
      config.vm.network :private_network, ip: '192.168.100.11'
    end  # vmware_fusion#
    node4.vm.provider :aws do |aws, override|
      override.vm.box = "dummy"
      override.vm.box_url = 'https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box'
      override.nfs.functional = false
      aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
      aws.secret_access_key = ENV['AWS_SECRET_ACCESS_KEY']
      aws.keypair_name = ENV['AWS_KEYPAIR_NAME']
      aws.ami = "ami-777f9b33"
      aws.region = "us-west-1"
      aws.instance_type = "t2.medium"
      override.ssh.username = "ec2-user"
      override.ssh.private_key_path = ENV['PRIVATE_AWS_SSH_KEY_PATH']
      aws.security_groups = ['sg-858d03e0']
      aws.block_device_mapping = [{ 'DeviceName' => '/dev/sda1', 'Ebs.VolumeSize' => 60 }]
      aws.subnet_id = 'subnet-55e8f937'
      aws.private_ip_address = '172.31.16.21'

    end #aws

    node4.vm.provider :azure do |azure, override|
      override.vm.box = "azure"
      azure.mgmt_certificate = '/Users/rcordell/Documents/MIDS/W205/MIDS-W205/project/vagrant/azure/ronmckea01.pem'
      azure.mgmt_endpoint = 'https://management.core.windows.net'
      azure.subscription_id = '651f1b6f-d652-4c9f-b1ba-3533acc3204a'
      azure.storage_acct_name = 'mckrhcea01storage01' # optional. A new one will be generated if not provided.

#      azure.vm_image = '0b11de9248dd4d87b18621318e037d37__RightImage-CentOS-6.5-x64-v14.1.5.1'
      azure.vm_image = '5112500ae3b842c8b9c604889f8753c3__OpenLogic-CentOS-65-20150605'
#      azure.vm_image = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_10-amd64-server-20150612-en-us-30GB'
      azure.vm_user = 'rcordell'
      azure.ssh_private_key_file = File.expand_path('~/.ssh/id_rsa')  # This is my private SSH key
      azure.ssh_certificate_file = File.expand_path('~/.ssh/ssh-cert.pem')  # This is the X509 certificate file generated from my private SSH key

      azure.vm_name = 'mckrhcea01-rmq4' # max 15 characters. contains letters, number and hyphens. can start with letters and can end with letters and numbers
      azure.cloud_service_name = 'mckrhcea01-rmq4' # same as vm_name. leave blank to auto-generate
      azure.deployment_name = 'mckrhcea01-rmq4' # defaults to cloud_service_name
      azure.vm_location = 'West US' # e.g., West US

      # Provide the following values if creating a *Nix VM
      azure.ssh_port = '22'
      config.ssh.pty = true  # corrects for the sudo requiring a tty on Centos distros
#      config.vm.provision :shell, :path => "../puppet/bootstrap/centos_6_x.sh"
    end  #azure
  end  #node4

  config.vm.provision :shell, :path => 'scripts/puppet-bootstrap/centos_6_x.sh'

  config.vm.provision :puppet do |puppet|
    puppet.manifests_path = "puppet/manifests"
    puppet.manifest_file = "site.pp"
    puppet.module_path = "puppet/modules"
    puppet.options = ['--verbose --debug --modulepath /vagrant/puppet/modules']
  end

end
